/*
 * This file is generated by jOOQ.
 */
package edu.java.model.jooq.tables.records;


import edu.java.model.jooq.tables.Links;

import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;
import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class LinksRecord extends UpdatableRecordImpl<LinksRecord> implements Record5<Long, Short, String, OffsetDateTime, Short> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>LINKS.ID</code>.
     */
    public void setId(@Nullable Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>LINKS.ID</code>.
     */
    @Nullable
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>LINKS.LINK_TYPE</code>.
     */
    public void setLinkType(@NotNull Short value) {
        set(1, value);
    }

    /**
     * Getter for <code>LINKS.LINK_TYPE</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Short getLinkType() {
        return (Short) get(1);
    }

    /**
     * Setter for <code>LINKS.URL</code>.
     */
    public void setUrl(@NotNull String value) {
        set(2, value);
    }

    /**
     * Getter for <code>LINKS.URL</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 255)
    @NotNull
    public String getUrl() {
        return (String) get(2);
    }

    /**
     * Setter for <code>LINKS.CHECKED_AT</code>.
     */
    public void setCheckedAt(@Nullable OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>LINKS.CHECKED_AT</code>.
     */
    @Nullable
    public OffsetDateTime getCheckedAt() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for <code>LINKS.STATUS</code>.
     */
    public void setStatus(@NotNull Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>LINKS.STATUS</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Short getStatus() {
        return (Short) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row5<Long, Short, String, OffsetDateTime, Short> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row5<Long, Short, String, OffsetDateTime, Short> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return Links.LINKS.ID;
    }

    @Override
    @NotNull
    public Field<Short> field2() {
        return Links.LINKS.LINK_TYPE;
    }

    @Override
    @NotNull
    public Field<String> field3() {
        return Links.LINKS.URL;
    }

    @Override
    @NotNull
    public Field<OffsetDateTime> field4() {
        return Links.LINKS.CHECKED_AT;
    }

    @Override
    @NotNull
    public Field<Short> field5() {
        return Links.LINKS.STATUS;
    }

    @Override
    @Nullable
    public Long component1() {
        return getId();
    }

    @Override
    @NotNull
    public Short component2() {
        return getLinkType();
    }

    @Override
    @NotNull
    public String component3() {
        return getUrl();
    }

    @Override
    @Nullable
    public OffsetDateTime component4() {
        return getCheckedAt();
    }

    @Override
    @NotNull
    public Short component5() {
        return getStatus();
    }

    @Override
    @Nullable
    public Long value1() {
        return getId();
    }

    @Override
    @NotNull
    public Short value2() {
        return getLinkType();
    }

    @Override
    @NotNull
    public String value3() {
        return getUrl();
    }

    @Override
    @Nullable
    public OffsetDateTime value4() {
        return getCheckedAt();
    }

    @Override
    @NotNull
    public Short value5() {
        return getStatus();
    }

    @Override
    @NotNull
    public LinksRecord value1(@Nullable Long value) {
        setId(value);
        return this;
    }

    @Override
    @NotNull
    public LinksRecord value2(@NotNull Short value) {
        setLinkType(value);
        return this;
    }

    @Override
    @NotNull
    public LinksRecord value3(@NotNull String value) {
        setUrl(value);
        return this;
    }

    @Override
    @NotNull
    public LinksRecord value4(@Nullable OffsetDateTime value) {
        setCheckedAt(value);
        return this;
    }

    @Override
    @NotNull
    public LinksRecord value5(@NotNull Short value) {
        setStatus(value);
        return this;
    }

    @Override
    @NotNull
    public LinksRecord values(@Nullable Long value1, @NotNull Short value2, @NotNull String value3, @Nullable OffsetDateTime value4, @NotNull Short value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LinksRecord
     */
    public LinksRecord() {
        super(Links.LINKS);
    }

    /**
     * Create a detached, initialised LinksRecord
     */
    @ConstructorProperties({ "id", "linkType", "url", "checkedAt", "status" })
    public LinksRecord(@Nullable Long id, @NotNull Short linkType, @NotNull String url, @Nullable OffsetDateTime checkedAt, @NotNull Short status) {
        super(Links.LINKS);

        setId(id);
        setLinkType(linkType);
        setUrl(url);
        setCheckedAt(checkedAt);
        setStatus(status);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised LinksRecord
     */
    public LinksRecord(edu.java.model.jooq.tables.pojos.Links value) {
        super(Links.LINKS);

        if (value != null) {
            setId(value.getId());
            setLinkType(value.getLinkType());
            setUrl(value.getUrl());
            setCheckedAt(value.getCheckedAt());
            setStatus(value.getStatus());
            resetChangedOnNotNull();
        }
    }
}
